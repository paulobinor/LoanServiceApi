// <auto-generated />
using System;
using LoanServiceApi.Infrastructure.Ef.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoanServiceApi.Infrastructure.Migrations
{
    [DbContext(typeof(LoanDbContext))]
    [Migration("20241111090157_InitializeCreate")]
    partial class InitializeCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LoanServiceApi.Domain.Models.Loan", b =>
                {
                    b.Property<string>("LoanId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("AmountPaid")
                        .HasColumnType("float");

                    b.Property<double>("BalanceDue")
                        .HasColumnType("float");

                    b.Property<string>("CustomerNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("LoanAmount")
                        .HasColumnType("float");

                    b.Property<string>("LoanName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MonthlyRepaymentAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("LoanId");

                    b.ToTable("Loans");

                    b.HasData(
                        new
                        {
                            LoanId = "cc4fcb00-9f3d-4a4f-ae26-12d4fe2a665e",
                            AmountPaid = 1500.0,
                            BalanceDue = 8500.0,
                            CustomerNo = "C001",
                            EndDate = new DateTime(2025, 8, 11, 10, 1, 57, 410, DateTimeKind.Local).AddTicks(2334),
                            LoanAmount = 10000.0,
                            LoanName = "Personal Loan",
                            MonthlyRepaymentAmount = 500.0,
                            StartDate = new DateTime(2024, 8, 11, 10, 1, 57, 410, DateTimeKind.Local).AddTicks(2311)
                        },
                        new
                        {
                            LoanId = "b5e2a007-0903-448f-9b2e-55cddc0d6fb7",
                            AmountPaid = 6000.0,
                            BalanceDue = 14000.0,
                            CustomerNo = "C002",
                            EndDate = new DateTime(2026, 5, 11, 10, 1, 57, 410, DateTimeKind.Local).AddTicks(2344),
                            LoanAmount = 20000.0,
                            LoanName = "Car Loan",
                            MonthlyRepaymentAmount = 1000.0,
                            StartDate = new DateTime(2024, 5, 11, 10, 1, 57, 410, DateTimeKind.Local).AddTicks(2343)
                        });
                });

            modelBuilder.Entity("LoanServiceApi.Domain.Models.LoanRepayment", b =>
                {
                    b.Property<string>("LoanRepaymentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("AmountPaid")
                        .HasColumnType("float");

                    b.Property<DateTime>("DatePaid")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoanId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoanRepaymentId");

                    b.HasIndex("LoanId");

                    b.ToTable("LoanRepayments");

                    b.HasData(
                        new
                        {
                            LoanRepaymentId = "8ec20728-5e6b-4e33-a80f-8d0cbc374261",
                            AmountPaid = 500.0,
                            DatePaid = new DateTime(2024, 9, 11, 10, 1, 57, 410, DateTimeKind.Local).AddTicks(2465),
                            LoanId = "cc4fcb00-9f3d-4a4f-ae26-12d4fe2a665e"
                        },
                        new
                        {
                            LoanRepaymentId = "f52deed2-8769-46ef-9646-dc1d02767203",
                            AmountPaid = 1000.0,
                            DatePaid = new DateTime(2024, 10, 11, 10, 1, 57, 410, DateTimeKind.Local).AddTicks(2479),
                            LoanId = "b5e2a007-0903-448f-9b2e-55cddc0d6fb7"
                        });
                });

            modelBuilder.Entity("LoanServiceApi.Domain.Models.LoanRepayment", b =>
                {
                    b.HasOne("LoanServiceApi.Domain.Models.Loan", null)
                        .WithMany("LoanRepayments")
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LoanServiceApi.Domain.Models.Loan", b =>
                {
                    b.Navigation("LoanRepayments");
                });
#pragma warning restore 612, 618
        }
    }
}
